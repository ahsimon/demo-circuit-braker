management:
  health.db.enabled: false
  endpoints:    
    web:
      base-path: /
      exposure:
        include: "*"

server:
  port: 7070
  servlet:
    context-path: /api/flights/itineraries-search

jetty:
  threadPool:
    maxThreads: 10
    minThreads: 10
    
chaos:
  monkey:
    enabled: false
    watcher:
      restController: true
    assaults:
      exceptionsActive: true
      latencyActive: true   
      latencyRangeStart: 10
      latencyRangeEnd: 12000  
      
spring:
  profiles:
    active: default

connector:  
   provider-alpha:
      host: http://localhost:8070
      responseTimeout: 5000
      connectionTimeout: 5000
      readTimeout: 5000         
   provider-beta:
      host: http://localhost:9070
      responseTimeout: 5000
      connectionTimeout: 5000
      readTimeout: 5000 
      
resilience4j.circuitbreaker:
  configs:
    default:
      failure-rate-threshold: 50
      sliding-window-type: count_based
      sliding-window-size: 5

      automatic-transition-from-open-to-half-open-enabled: true
      wait-duration-in-open-state: 10s
      permitted-number-of-calls-in-half-open-state: 1

      register-health-indicator: false
      record-exceptions:
        - java.lang.RuntimeException
        - java.lang.InterruptedException
        - io.netty.handler.timeout.ReadTimeoutException
        - org.springframework.web.reactive.function.client.WebClientRequestException
        - com.twa.flights.api.itineraries.search.exception.TWAException
  backends:
    provider-alpha:
      baseConfig: default
    provider-beta:
      baseConfig: default          